{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "from selenium import webdriver\n",
    "import time\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#getting_random_input_form_user"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter the name of the month in small letter: april\n",
      "enter the name of the year: 2021\n"
     ]
    }
   ],
   "source": [
    "month=input(\"enter the name of the month in small letter: \")\n",
    "year=input(\"enter the name of the year: \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#active_chrome_browser_using_path\n",
    "#and_then_giving_the_url_to_chrome"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "chrome_browser=webdriver.Chrome(executable_path=r'C:\\Users\\IamRaj\\chromedriver_win32\\\\chromedriver.exe')\n",
    "chrome_browser.get('https://www.accuweather.com/en/in/kolkata/206690/'+month+'-weather/206690?year='+year+'&view=list')\n",
    "time.sleep(10)\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "j=chrome_browser.find_elements_by_class_name('high') #collecting_data_info_named_high_that_denote_high_temp\n",
    "high_temperature=[] \n",
    "for i in j:\n",
    "    t=i.get_attribute('textContent')\n",
    "    \n",
    "    t=t.replace(\"\\t\",\"\")  #removing all new line and tab\n",
    "    t=t.replace(\"\\n\",\"\")\n",
    "    \n",
    "    high_temperature.append(t) #appending all the high temp info in high_temperature\n",
    "    \n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['37°', '38°', '40°', '39°', '39°', '36°', '37°', '37°', '35°', '36°', '36°', '36°', '36°', '37°', '37°', '38°', '39°', '39°', '38°', '36°', '35°', '36°', '40°', '39°', '38°', '31°', '37°', '39°', '40°', '40°', '39°', '38°', '38°', '38°']\n"
     ]
    }
   ],
   "source": [
    "print(high_temperature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "j=chrome_browser.find_elements_by_class_name('low') #collecting_data_info_named_low_that_denote_low_temp\n",
    "low_temperature=[]\n",
    "for i in j:\n",
    "    t=i.get_attribute('textContent') \n",
    "    \n",
    "    t=t.replace(\"\\t\",\"\")  #removing all new line and tab\n",
    "    t=t.replace(\"\\n\",\"\")\n",
    "    \n",
    "\n",
    "    \n",
    "    low_temperature.append(t) #appending all the low temp info in low_temperature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['25°', '26°', '27°', '27°', '26°', '27°', '27°', '24°', '22°', '26°', '26°', '26°', '26°', '27°', '26°', '27°', '27°', '27°', '27°', '28°', '25°', '24°', '26°', '27°', '25°', '24°', '25°', '26°', '28°', '28°', '28°', '28°', '27°', '27°']\n"
     ]
    }
   ],
   "source": [
    "print(low_temperature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "j=chrome_browser.find_elements_by_class_name('date') #collecting_data_info_named_date_that_denote_date_of_the_month\n",
    "Date=[] \n",
    "for i in j:\n",
    "    t=i.get_attribute('textContent')\n",
    "   \n",
    "    t=t.replace(\"\\t\",\"\")  #removing all new line and tab\n",
    "    t=t.replace(\"\\n\",\"\")\n",
    "   \n",
    "    \n",
    "    Date.append(t) #appending all the date info in Date    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['28', '29', '30', '31', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '1']\n"
     ]
    }
   ],
   "source": [
    "print(Date)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']\n",
      "['39°', '36°', '37°', '37°', '35°', '36°', '36°', '36°', '36°', '37°', '37°', '38°', '39°', '39°', '38°', '36°', '35°', '36°', '40°', '39°', '38°', '31°', '37°', '39°', '40°', '40°', '39°', '38°', '38°', '38°']\n",
      "['26°', '27°', '27°', '24°', '22°', '26°', '26°', '26°', '26°', '27°', '26°', '27°', '27°', '27°', '27°', '28°', '25°', '24°', '26°', '27°', '25°', '24°', '25°', '26°', '28°', '28°', '28°', '28°', '27°', '27°']\n"
     ]
    }
   ],
   "source": [
    "k=0                         #creating a flag\n",
    "idx=Date.index('1')         #finding the index no of '1' in the date list\n",
    "Date=Date[idx:]             #start from the following index number\n",
    "high_temperature=high_temperature[idx:] #do same for high temp and low temp\n",
    "low_temperature=low_temperature[idx:]\n",
    "\n",
    "for i in range(1,len(Date)):        #eleminating unnesessary dates after 30 or 31\n",
    "    if(int(Date[i-1])>int(Date[i])):\n",
    "        idx2=i\n",
    "        k=1\n",
    "        break\n",
    "        \n",
    "if(k==1):\n",
    "    Date=Date[:idx2]\n",
    "    high_temperature=high_temperature[:idx2]\n",
    "    low_temperature=low_temperature[:idx2]\n",
    "                                    \n",
    "\n",
    "print(Date)\n",
    "print(high_temperature)\n",
    "print(low_temperature)                                    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   date Temperature(High) Temperature(Low)\n",
      "0     1               39°              26°\n",
      "1     2               36°              27°\n",
      "2     3               37°              27°\n",
      "3     4               37°              24°\n",
      "4     5               35°              22°\n",
      "5     6               36°              26°\n",
      "6     7               36°              26°\n",
      "7     8               36°              26°\n",
      "8     9               36°              26°\n",
      "9    10               37°              27°\n",
      "10   11               37°              26°\n",
      "11   12               38°              27°\n",
      "12   13               39°              27°\n",
      "13   14               39°              27°\n",
      "14   15               38°              27°\n",
      "15   16               36°              28°\n",
      "16   17               35°              25°\n",
      "17   18               36°              24°\n",
      "18   19               40°              26°\n",
      "19   20               39°              27°\n",
      "20   21               38°              25°\n",
      "21   22               31°              24°\n",
      "22   23               37°              25°\n",
      "23   24               39°              26°\n",
      "24   25               40°              28°\n",
      "25   26               40°              28°\n",
      "26   27               39°              28°\n",
      "27   28               38°              28°\n",
      "28   29               38°              27°\n",
      "29   30               38°              27°\n"
     ]
    }
   ],
   "source": [
    "d={\"date\":Date,'Temperature(High)':high_temperature,'Temperature(Low)':low_temperature} #create a dataframe using data high temp and low temp\n",
    "df=pd.DataFrame(d)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
